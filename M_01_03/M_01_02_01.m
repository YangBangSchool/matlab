% 오늘은 매트랩 기본 명령어를 알아 보겠습니다!
clc 
% 우측 명령어창을 모두 지웁니다
% 데이터 값은 남아 있습니다!
% 작업 공간에 보시면 a, A, b 등 아직 남아 있는거 보이시죠
fclose all; % 이건 나중에 설명 드리겠습니다
figure % figure 그래픽 창이 생성되었습니다
close all; % 그래픽 창이 닫혔습니다.
clear all; % 메모리상 load된 자료를 지웁니다
exit % matlab 프로그램을 종료합니다
% ctl + c % 실행중인 프로그램을 종료합니다
% 컨트롤 + c의 기능 을 볼까요?
% a = [1:1:10000000]
% 방금 컨트롤 + c를 실행하니깐 뭠췄습니다!

%% 행렬의 생성
a = [0,1,2;3,4,5;6,7,8] % matrix 생성합니다
A = [0 1 2; 3 4 5;6 7 8] % 행렬은 square bracket 즉 []로
% 변수는 대문자 소문자를 구분합니다
% 요소 구별은 콤마나 space를 사용합니다
% 열의 변경은 세미콜론(;)를 이용합니다

c = [1:10] % 일정 간격으로 벡터를 생성하는데 콘론(:)이용
c = [0:0.1:1] % 처음: 증가값 : 끝
C = [1:-0.1:0] % 일정 간격 벡터 생성 감소 벡터를 생성
% 만약 1씩 증분을 하려면 가운대 증분값을 생략 가능합니다!

%% 행렬의 덧셈과 뺄셈
A
sum(A) %  열을 더한 결과가 행벡터 형태로 나오게됩니다

B = A+a % 벡터의 크기가 같으면 계산이 됩니다
b = A+2 % A 벡터에 2를 합해 보겠습니다

c = B - b % 행렬에 B 벡터에서 b를 빼겠습니다
% 행렬에 scalar를 더하거나 빼는 경우
% 모든 원소에 그 scalar를 더하거나 뺀 효과 입니다

x = c(:,1) % 첫번째 열만 출력합니다!
x = c(:,3) % 3번째 열을 출력합니다!
% 형렬의 이름에 이어서 괄호 안에 첨자(원소의 색인)
%을 입력함으로써 해당 원소 또는 벡터를 출력합니다

y = c(1,:) % 첫번째 행만을 출력합니다
y = c(3,:) % 3번째 행만을 출력합니다!

%% 행렬의 곱셈
a = [1 2 3] % a 벡터 생성
b = [2 3 4] % b 벡터 생성
%x= a*b % 행렬 곱셈의 차원이 잘못됨
% 첫번째 행렬과 두번째 행렬의 행 갯수 일치?

X=a.*b % 곱셈이 행해지는데
% 원소대 원소의 곱셈인것을 우리는 알 수 있어요~
% a와 b의 연산자 행렬의 크기가 같으면 원소대 원소
% 곱샘을 하게됩니다! 
% 원소대 원소 곱샘법이 중요합니다!!
% 곰샘법 앞에 마침표 점이 보이세요?!

aa = [1 2 3]
bb =[1; 2; 3] 
xx= aa*bb % 벡터 연산 완료! 
% 연산자의 행렬의 크기가 같으면 연산가능
% 하지만 벡터 연산보다 더 중요한!! 원소대 원소곱샘

%% 이번에는 벡터 나눗셈입니다

a = [1 2 3]
b = [2 3 4]
x= a/b
xx= a./b % 이번에는 원소대 원소 나눗셈입니다!
% 원소대 원소 나눗셈도 잘 알아 두셔요!
% 실제 예시에서는 대부분 원소대 원소의
% 덧셈, 뺄샘, 곱샘, 나눗셈이 훨씬 많이 활용됩니다!
%%  행렬의 거듭제곱 및 제곱근

a=[1,3,5;7,8,9;10,12,13] % 3 x 3 matrix 생성
a=[1 3 5;7 8 9;10 12 13] % 위랑 똑같아요
b=a^2
b=a.^2
% 마찬가지로 차이가 보이시나요?
% 원소대 원소 거듭 제곱 계산
% matrix 계산을 수행한 거듭제곱
% 이런 부분은 프로그래밍 오류가 아닌~ 계산 오류기
% 때문에 여기서 오류 발생하면 최종 값에서..
% 오류 찾기가 매우 힘들어 집니다 ㅠ
% 꼭 원소대 원소 계산법은 완벽히 파악하고 넘어가요!

